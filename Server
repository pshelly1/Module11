package chapter33;

import java.io.*;
import java.net.*;
import java.util.Date;
import javafx.application.Application;
import javafx.application.Platform;
import javafx.scene.Scene;
import javafx.scene.control.ScrollPane;
import javafx.scene.control.TextArea;
import javafx.stage.Stage;

public class Server extends Application {
    @Override
    public void start(Stage primaryStage) {
        // Text area for displaying contents
        TextArea ta = new TextArea();
        // Create a scene and place it in the stage
        Scene scene = new Scene(new ScrollPane(ta), 450, 200);
        primaryStage.setTitle("Server"); // Set the stage title
        primaryStage.setScene(scene); // Place the scene in the stage
        primaryStage.show(); // Display the stage

        new Thread(() -> {
            try {
                // Create a server socket
                ServerSocket serverSocket = new ServerSocket(12345);
                Platform.runLater(() -> ta.appendText("Server started at " + new Date() + '\n'));

                while (true) {
                    // Listen for a connection request
                    Socket socket = serverSocket.accept();
                    Platform.runLater(() -> ta.appendText("Client connected: " + socket.getInetAddress() + '\n'));

                    // Create data input and output streams for the client
                    DataInputStream inputFromClient = new DataInputStream(socket.getInputStream());
                    DataOutputStream outputToClient = new DataOutputStream(socket.getOutputStream());

                    // Receive number from the client
                    int number = inputFromClient.readInt();
                    boolean isPrime = isPrimeNumber(number);

                    // Send response back to the client
                    outputToClient.writeBoolean(isPrime);

                    Platform.runLater(() -> {
                        ta.appendText("Number received from client: " + number + '\n');
                        ta.appendText("Is the number prime? " + (isPrime ? "Yes" : "No") + '\n');
                    });

                    socket.close();
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }).start();
    }

    private static boolean isPrimeNumber(int number) {
        if (number <= 1) {
            return false;
        }

        for (int i = 2; i <= Math.sqrt(number); i++) {
            if (number % i == 0) {
                return false;
            }
        }

        return true;
    }

    public static void main(String[] args) {
        launch(args);
    }
}
